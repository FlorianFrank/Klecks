%{
#include <stdio.h>


%}



%token CIRCLE RECTANGLE TRIANGLE
%token SEMICOLON
%token SQOPEN SQCLOSE
%token AT
%token NUMBER
%token FLOAT
%token FILL
%token COLOR
%token ROTATE
%token SCALE

%%


program: header stmtlist trailer;
stmtlist: ;
stmtlist: stmtlist stmt;


header: { printf("%%!PS-Adobe\n"
					"%%%% Generated by klx version 1.0\n");};

trailer: ;

stmt: {printf("gsave\n");} options klecks {printf("grestore\n");};


klecks: color figure additionalOptions defaultcolor SEMICOLON;
figure: CIRCLE {printf("newpath 10 10 10 0 360 arc\n");};
figure: RECTANGLE {printf("newpath 0 0 moveto 0 10 rlineto 10 0 rlineto 0 10 neg rlineto 10 neg 0 rlineto\n");};
figure: TRIANGLE {printf("newpath 0 0 moveto 10 0 rlineto 5 neg 10 rlineto 5 neg 10 neg rlineto\n");};


options: ;
options: SQOPEN optionlist SQCLOSE;

additionalOptions: ;
additionalOptions: additionalOptions additionalOption;

additionalOption: ROTATE SQOPEN NUMBER SQCLOSE {printf("%d rotate\n",$3);};
additionalOption: FILL {printf("fill\n");};
additionalOption: SCALE SQOPEN NUMBER AT NUMBER SQCLOSE {printf("%d %d scale\n",$4,$6);};

color: ;
color: COLOR SQOPEN NUMBER AT NUMBER AT NUMBER SQCLOSE {printf("%d %d %d setrgbcolor\n", $3,$5,$7);};
defaultcolor: {printf("0 0 0 setrgbcolor\n");};


optionlist: option;

option: NUMBER AT NUMBER {printf("%d %d translate\n", $1, $3); };


%%


int yyerror(char * msg) {
	fprintf(stderr, "ERROR: %s\n", msg);
	return 0;
}


int main(void) {
	yyparse();
	return 0;
}
